AUTOMAKE_OPTIONS = foreign
ACLOCAL_AMFLAGS = -I m4
LIBTOOL = @LIBTOOL@ @MSQ_LIBTOOL_FLAGS@
AM_LDFLAGS = @AM_LDFLAGS@
AM_CPPFLAGS = @AM_CPPFLAGS@

SUBDIRS = . itaps doc testSuite utils meshFiles


# Need to be explicit about these for old versions of automake
OLD_AM_GENERATED_HDRS = include/mesquite_config.h \
                        include/mesquite_version.h 
OLD_AM_EXTRA_CONFIG = m4/cxxflags.m4 \
                      m4/cxx.m4 \
                      m4/util.m4 \
		      m4/itaps.m4
 
EXTRA_DIST = lgpl.txt \
             mkconfigure \
             $(OLD_AM_GENERATED_HDRS:=.in) \
             $(OLD_AM_EXTRA_CONFIG) \
             $(INCLUDED_MAKEFILES) \
             include/mesquite_config.win.h \
	     $(srcdir)/cmake/*.cmake \
	     CMakeLists.txt \
	     src/CMakeLists.txt 

BUILT_SOURCES = include/Mesquite_all_headers.hpp
MSQ_SRCS=
MSQ_HDRS=
MSQ_INCLUDES =
INCLUDED_MAKEFILES =
lib_LTLIBRARIES = libmesquite.la
libmesquite_la_DEPENDENCIES=
# Tell libtool that there are no undefined symbols when linking 
# the library.  This means that either the symbol is defined in
# the library or we include a -lname argument to specify which 
# other library provides the symbol.  Libtool requires this 
# guarantee to generate libraries on platforms for which shared
# libs cannot have any unmet depenendencies (windows, and maybe AIX)
libmesquite_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined

include src/Mesh/Makefile.am
include src/Control/Makefile.am
include src/Control/Wrappers/Makefile.am
include src/MappingFunction/Makefile.am
include src/MappingFunction/Lagrange/Makefile.am
include src/MappingFunction/Linear/Makefile.am
include src/Misc/Makefile.am
include src/ObjectiveFunction/Makefile.am
include src/QualityAssessor/Makefile.am
include src/QualityImprover/Makefile.am
include src/QualityImprover/TopologyModifier/Makefile.am
include src/QualityImprover/VertexMover/Makefile.am
include src/QualityImprover/VertexMover/ConjugateGradient/Makefile.am
include src/QualityImprover/VertexMover/Relaxation/Makefile.am
include src/QualityImprover/VertexMover/SteepestDescent/Makefile.am
include src/QualityImprover/VertexMover/NonSmoothDescent/Makefile.am
include src/QualityImprover/VertexMover/FeasibleNewton/Makefile.am
include src/QualityImprover/VertexMover/Randomize/Makefile.am
include src/QualityImprover/VertexMover/TrustRegion/Makefile.am
include src/QualityImprover/VertexMover/QuasiNewton/Makefile.am
include src/QualityMetric/Makefile.am
include src/QualityMetric/Shape/Makefile.am
include src/QualityMetric/Smoothness/Makefile.am
include src/QualityMetric/TMP/Makefile.am
include src/QualityMetric/TMP/2D/Makefile.am
include src/QualityMetric/TMP/3D/Makefile.am
include src/QualityMetric/Untangle/Makefile.am
include src/QualityMetric/Volume/Makefile.am
include src/TargetCalculator/Makefile.am

libmesquite_la_includedir = $(includedir)
libmesquite_la_SOURCES = $(MSQ_SRCS) 

libmesquite_la_include_HEADERS = include/Mesquite.hpp \
                                 include/Mesquite_all_headers.hpp \
                                 $(top_builddir)/include/mesquite_config.h \
				 $(top_builddir)/include/mesquite_version.h \
                                 include/MeshInterface.hpp \
				 include/ParallelMeshInterface.hpp \
				 include/ParallelHelperInterface.hpp \
                                 $(MSQ_HDRS)
libmesquite_la_LIBADD = $(MESQUITE_LIBS)
AM_CPPFLAGS += -Iinclude \
               -I$(top_srcdir)/include  \
               $(MSQ_INCLUDES) \
	       $(IBASE_INCL)

include/Mesquite_all_headers.hpp: $(MSQ_HDRS)
	@echo "Generating $@..."
	@echo '/* NOTE: This file is generated by make.' > $@
	@echo ' *       Do not manually edit it.'       >> $@
	@echo ' */'                                     >> $@
	@echo '#ifndef MESQUITE_ALL_HEADERS_HPP'        >> $@
	@echo '#define MESQUITE_ALL_HEADERS_HPP'        >> $@
	@echo '#include "Mesquite.hpp"'                 >> $@
	@echo '#include "MeshInterface.hpp"'            >> $@ 
	@echo '#include "ParallelMeshInterface.hpp"'    >> $@
	@echo '#include "ParallelHelperInterface.hpp"'  >> $@ 
	@for file in $(MSQ_HDRS); do \
	   n=`expr X"$$file" : X"src/.*/\([^/]*\)"`;\
	   test -z "$$n" || echo "#include \"$$n\"" >> $@; \
	done
	@echo '#endif'                                  >> $@ 

$(RECURSIVE_TARGETS) distdir: testSuite/cppflags.make
testSuite/cppflags.make: $(MSQ_HDRS) Makefile.am config.status
	@echo "Generating $@..."
	@echo "INCLUDES = -I\$$(top_srcdir)/include \\"    > $@
	@for flag in $(MSQ_INCLUDES); do \
	  n=`expr X"$$flag" : X"-I$(srcdir)/src/\(.*\)" || true`; \
	  if test "x$$n" != "x"; then \
	    echo "	-I\$$(top_srcdir)/src/$$n \\"     >> $@ ; \
	  fi ; \
	done
	@echo "	-I\$$(top_builddir)/include \\"           >> $@ 
	@echo "	-I\$$(top_builddir)/testSuite \\"         >> $@
	@echo "	-I\$$(top_srcdir)/itaps \\"               >> $@ 
	@echo "	-I\$$(top_builddir)/itaps \\"             >> $@
	@echo "	\$$(IBASE_INCL)"                          >> $@

MOSTLYCLEANFILES = include/Mesquite_all_headers.hpp 
DISTCLEANFILES = testSuite/cppflags.make $(OLD_AM_GENERATED_HDRS)

