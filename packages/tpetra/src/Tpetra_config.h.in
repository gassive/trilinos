/* src/Tpetra_config.h.in.  Generated from configure.ac by autoheader.  */

/* Define to 1 if you have the <algorithm> header file. */
#undef HAVE_ALGORITHM

/* define if bool is a built-in type */
#undef HAVE_BOOL

/* Define to 1 if you have the <cassert> header file. */
#undef HAVE_CASSERT

/* Define to 1 if you have the <cmath> header file. */
#undef HAVE_CMATH

/* Define to 1 if you have the <cstdio> header file. */
#undef HAVE_CSTDIO

/* Define to 1 if you have the <cstdlib> header file. */
#undef HAVE_CSTDLIB

/* Define if want to build examples */
#undef HAVE_EXAMPLES

/* Define if you want to build export makefiles. */
#undef HAVE_EXPORT_MAKEFILES

/* Define if you are using gnumake - this will shorten your link lines. */
#undef HAVE_GNUMAKE

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the <iomanip> header file. */
#undef HAVE_IOMANIP

/* Define to 1 if you have the <iostream> header file. */
#undef HAVE_IOSTREAM

/* Define if want to build libcheck */
#undef HAVE_LIBCHECK

/* Define to 1 if you have the <map> header file. */
#undef HAVE_MAP

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* define if we want to use MPI */
#undef HAVE_MPI

/* define if the compiler supports the mutable keyword */
#undef HAVE_MUTABLE

/* define if the compiler implements namespaces */
#undef HAVE_NAMESPACES

/* define if the compiler accepts the new for scoping rules */
#undef HAVE_NEW_FOR_SCOPING

/* Define to 1 if you have the <numeric> header file. */
#undef HAVE_NUMERIC

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* define if new form of std::count is supported */
#undef HAVE_STD_NEW_COUNT_SYNTAX

/* define if the compiler supports Standard Template Library */
#undef HAVE_STL

/* Define to 1 if you have the <string> header file. */
#undef HAVE_STRING

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define if want to build tests */
#undef HAVE_TESTS

/* Define if want to build tpetra-examples */
#undef HAVE_TPETRA_EXAMPLES

/* Define if want to build tpetra-print_abuse_warnings */
#undef HAVE_TPETRA_PRINT_ABUSE_WARNINGS

/* Define if want to build tpetra-print_efficiency_warnings */
#undef HAVE_TPETRA_PRINT_EFFICIENCY_WARNINGS

/* Define if want to build tpetra-print_warnings */
#undef HAVE_TPETRA_PRINT_WARNINGS

/* Define if want to build tpetra-tests */
#undef HAVE_TPETRA_TESTS

/* Define if want to build tpetra-throw_abuse_warnings */
#undef HAVE_TPETRA_THROW_ABUSE_WARNINGS

/* Define if want to build tpetra-throw_efficiency_warnings */
#undef HAVE_TPETRA_THROW_EFFICIENCY_WARNINGS

/* Define if want to build tpetra-throw_warnings */
#undef HAVE_TPETRA_THROW_WARNINGS

/* Define if want to build with epetra enabled */
#undef HAVE_TPETRA_EPETRA

/* Define if want to build with triutils enabled */
#undef HAVE_TPETRA_TRIUTILS

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if you have the <vector> header file. */
#undef HAVE_VECTOR

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif
