INCLUDE(PackageAddExecutableAndTest)
INCLUDE(PackageCopyFilesToBinaryDir)

PACKAGE_ADD_EXECUTABLE_AND_TEST(
  Test_01
  SOURCES test_01.cpp
  ARGS PrintItAll
  NUM_MPI_PROCS 1
  PASS_REGULAR_EXPRESSION "TEST PASSED"
  ADD_DIR_TO_NAME
  )

PACKAGE_ADD_EXECUTABLE_AND_TEST(
  Test_02
  SOURCES test_02.cpp
  ARGS PrintItAll
  NUM_MPI_PROCS 1
  PASS_REGULAR_EXPRESSION "TEST PASSED"
  ADD_DIR_TO_NAME
  )

PACKAGE_ADD_EXECUTABLE_AND_TEST(
  Test_03
  SOURCES test_03.cpp
  ARGS PrintItAll
  NUM_MPI_PROCS 1
  PASS_REGULAR_EXPRESSION "TEST PASSED"
  ADD_DIR_TO_NAME
  )

PACKAGE_ADD_EXECUTABLE_AND_TEST(
  Test_04
  SOURCES test_04.cpp
  ARGS PrintItAll
  NUM_MPI_PROCS 1
  PASS_REGULAR_EXPRESSION "TEST PASSED"
  ADD_DIR_TO_NAME
  )

PACKAGE_ADD_EXECUTABLE_AND_TEST(
  Test_05
  SOURCES test_05.cpp
  ARGS PrintItAll
  NUM_MPI_PROCS 1
  PASS_REGULAR_EXPRESSION "TEST PASSED"
  ADD_DIR_TO_NAME
  )

PACKAGE_ADD_EXECUTABLE_AND_TEST(
  Test_06
  SOURCES test_06.cpp
  ARGS PrintItAll
  NUM_MPI_PROCS 1
  PASS_REGULAR_EXPRESSION "TEST PASSED"
  ADD_DIR_TO_NAME
  )

PACKAGE_ADD_EXECUTABLE_AND_TEST(
  Test_07
  SOURCES test_07.cpp
  ARGS PrintItAll
  NUM_MPI_PROCS 1
  PASS_REGULAR_EXPRESSION "TEST PASSED"
  ADD_DIR_TO_NAME
  )

PACKAGE_ADD_EXECUTABLE_AND_TEST(
  Test_08
  SOURCES test_08.cpp
  ARGS PrintItAll
  NUM_MPI_PROCS 1
  PASS_REGULAR_EXPRESSION "TEST PASSED"
  ADD_DIR_TO_NAME
  )

PACKAGE_ADD_EXECUTABLE_AND_TEST(
  Test_09
  SOURCES test_09.cpp
  ARGS PrintItAll
  NUM_MPI_PROCS 1
  PASS_REGULAR_EXPRESSION "TEST PASSED"
  ADD_DIR_TO_NAME
  )

PACKAGE_ADD_EXECUTABLE_AND_TEST(
  Test_10
  SOURCES test_10.cpp
  ARGS PrintItAll
  NUM_MPI_PROCS 1
  PASS_REGULAR_EXPRESSION "TEST PASSED"
  ADD_DIR_TO_NAME
  )

PACKAGE_COPY_FILES_TO_BINARY_DIR(IntegrationTestDataCopy
  SOURCE_FILES
    EDGE_integrals.dat
    HEX_integrals.dat
    QUAD_integrals.dat
    TET_integrals.dat
    TRI_integrals.dat
    TRIPRISM_integrals.dat
  SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/data"
  DEST_DIR "${CMAKE_CURRENT_BINARY_DIR}/data"
#  EXEDEPS Test_01 #Test_02
)

